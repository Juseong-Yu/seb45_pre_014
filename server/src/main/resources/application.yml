spring:

#  datasource:
#    url: jdbc:mysql://[xx]/PRE_014?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#    username: [xx]
#    password: [xx]
#    driver-class-name: com.mysql.cj.jdbc.Driver


  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 606279912020-m5ahoub3m7hs20rdkd3q7r4rvf97puh7.apps.googleusercontent.com

            clientSecret: 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
            scope:
              - email
              - profile


  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:userdb;DB_CLOSE_DELAY=-1
    username: sa
    password: 1234



  jpa:

    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create  # (1) 스키마 자동 생성
    show-sql: true      # (2) SQL 쿼리 출력
    properties:
      hibernate:
        format_sql: true  # (3) SQL pretty print
  sql:
    init:
      data-locations: classpath*:db/h2/data.sql



#     database-platform: org.hibernate.dialect.MySQL8Dialect
#     database: mysql
#     show-sql: true
#     hibernate:
#       ddl-auto: create
#     properties:
#       hibernate:
#         format_sql: true







logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG
server:
  #  port: 8085
  servlet:
    encoding:
      force-response: true
mail:
  address:
    admin: admin@gmail.com    # jwt 사용할때 필요

jwt:
  key: dfdfdsgsgdsgsddsggsdgdggdsgdsgdggdgdsgdggddggdsdgsddggdgdsdgsdsgdsgdgsdggdsdgsdgs    # jwt 사용할때 필요 ${JWT_SECRET_KEY}
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420



#awsParameterStorePropertySource:   # AWS Systems Manager
#  enabled: true